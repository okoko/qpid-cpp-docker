name: Docker
on:
  push:
    branches:
    - main
  # We want to periodically update the base image for security
  schedule:
    # min hour dom month dow
    - cron: '22 3 * * 1'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Figure out version tag & created date
      id: vars
      run: |
        set -x
        eval $( cat Dockerfile | sed -n -e 's/ARG \(cpp\|proton\)=/QPID_\U\1_VERSION=/p' )
        echo "tag=$QPID_CPP_VERSION-$QPID_PROTON_VERSION" >> $GITHUB_OUTPUT
        echo "created=$(date --utc +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@5927c834f5b4fdf503fca6f4c7eccda82949e1ee # v3.1.0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@4fd812986e6c8c2a69e18311145f9371337f27d4 # v3.4.0

    - name: Log in to Docker Hub
      uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
      if: github.ref == 'refs/heads/main'
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Log in to the Container registry
      uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build the image
      uses: docker/build-push-action@1ca370b3a9802c92e886402e0dd88098a2533b12 # v6.4.1
      with:
        context: .
        push: true
        tags: |
          ghcr.io/okoko/qpid-cpp:${{ steps.vars.outputs.tag }}
          ghcr.io/okoko/qpid-cpp:latest
          okoko/qpid-cpp:${{ steps.vars.outputs.tag }}
          okoko/qpid-cpp:latest
        platforms: linux/amd64,linux/arm64
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          CREATED=${{ steps.vars.outputs.created }}
          SOURCE_COMMIT=${{ github.sha }}
        # https://docs.docker.com/build/ci/github-actions/cache/
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # With org.opencontainers.image.source pointing to this repository Dockerfile FROM updates in pull requests can be scanned
    # if the commits have matching tags with the image.
    # https://github.blog/changelog/2023-04-13-dependabot-now-supports-fetching-release-notes-and-changelogs-for-docker-images/
    # https://octokit.github.io/rest.js/v19#git-create-ref
    # https://octokit.github.io/rest.js/v19#git-update-ref
    - name: Tag the commit or update tag
      if: github.ref == 'refs/heads/main'
      uses: actions/github-script@v7
      with:
        script: |
          try {
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.vars.outputs.tag }}',
              sha: context.sha,
            });
          } catch(e) {
            if (e.status === 422) {
              await github.rest.git.updateRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'tags/${{ steps.vars.outputs.tag }}',
                sha: context.sha,
                force: true,
              });
            }
          }

  # Can not use Personal Access Token to update the README. Returns FORBIDDEN.
  describe:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Docker Hub Description
      uses: peter-evans/dockerhub-description@e98e4d1628a5f3be2be7c231e50981aee98723ae # v4.0.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        repository: okoko/qpid-cpp
